{"version":3,"sources":["components/viewModal.js","components/createAntFields.js","components/userModal.js","components/userCard.js","components/User.js","components/postCard.js","components/postModal.js","components/Post.js","App.js","serviceWorker.js","index.js"],"names":["ViewModal","props","id","visible","onCancel","onCreate","useState","user","setUser","useEffect","axios","get","then","res","data","catch","err","console","log","message","title","okText","onOk","name","FormItem","Item","Option","CreateAntField","AntComponent","field","form","hasFeedback","label","selectOptions","submitCount","type","touched","submitted","hasError","errors","submittedError","touchedError","className","help","validateStatus","onBlur","setFieldTouched","onChange","value","target","setFieldValue","map","key","AntInput","CollectionCreateForm","handleSubmit","initialValues","onSubmit","render","component","placeholder","UserCard","userDelete","getUsers","isVisible","setIsVisible","userToEdit","setUserToEdit","isEditVisible","setIsEditVisible","extra","onClick","style","margin","backgroundColor","width","wrappedComponentRef","formRef","formValues","actions","put","resetForm","Users","userArray","deleteUser","delete","display","flexDirection","justifyContent","alignItems","flexWrap","post","Card","styled","div","PostCard","text","userId","find","user_id","Post","process","postArray","setPostArray","error","Header","Content","Footer","baseUrl","App","setUserArray","theme","mode","defaultSelectedKeys","lineHeight","to","padding","background","minHeight","exact","path","User","textAlign","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35799445.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\nimport { Modal } from 'antd';\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:4000' : ''\r\n\r\nconst ViewModal = (props) => {\r\n    const {id, visible, onCancel, onCreate} = props;\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get(baseUrl + `/api/users/${id}`)\r\n            .then(res => {\r\n                setUser(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Modal\r\n        visible={visible}\r\n        title=\"USER\"\r\n        okText=\"Create\"\r\n        onCancel={onCancel}\r\n        onOk={onCancel}\r\n      >\r\n        <div>\r\n            <h2>{user.name}</h2>\r\n        </div>\r\n    \r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default ViewModal;","import React from \"react\";\r\nimport { DatePicker, Form, Input, TimePicker, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\n\r\nconst CreateAntField = AntComponent => ({\r\n  field,\r\n  form,\r\n  hasFeedback,\r\n  label,\r\n  selectOptions,\r\n  submitCount,\r\n  type,\r\n  ...props\r\n}) => {\r\n  const touched = form.touched[field.name];\r\n  const submitted = submitCount > 0;\r\n  const hasError = form.errors[field.name];\r\n  const submittedError = hasError && submitted;\r\n  const touchedError = hasError && touched;\r\n  const onInputChange = ({ target: { value } }) =>\r\n    form.setFieldValue(field.name, value);\r\n  const onChange = value => form.setFieldValue(field.name, value);\r\n  const onBlur = () => form.setFieldTouched(field.name, true);\r\n  return (\r\n    <div className=\"field-container\">\r\n      <FormItem\r\n        label={label}\r\n        hasFeedback={\r\n          (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\r\n        }\r\n        help={submittedError || touchedError ? hasError : false}\r\n        validateStatus={submittedError || touchedError ? \"error\" : \"success\"}\r\n      >\r\n        <AntComponent\r\n          {...field}\r\n          {...props}\r\n          onBlur={onBlur}\r\n          onChange={type ? onInputChange : onChange}\r\n        >\r\n          {selectOptions &&\r\n            selectOptions.map(name => <Option key={name}>{name}</Option>)}\r\n        </AntComponent>\r\n      </FormItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AntSelect = CreateAntField(Select);\r\nexport const AntDatePicker = CreateAntField(DatePicker);\r\nexport const AntInput = CreateAntField(Input);\r\nexport const AntTimePicker = CreateAntField(TimePicker);\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {AntInput} from \"./createAntFields\";\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport { Modal } from 'antd';\r\n\r\nconst CollectionCreateForm = (props) => {\r\n    const {visible, onCancel, onCreate, handleSubmit} = props;\r\n\r\n\r\n    return (\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Enter User Details\"\r\n          okText=\"Create\"\r\n          onCancel={onCancel}\r\n          onOk={onCreate}\r\n        >\r\n          <Formik\r\n            initialValues={{name: ''}}\r\n            onSubmit={handleSubmit}\r\n            render={() => (\r\n                <Form className=\"form-container\">\r\n                <div>\r\n                    <Field component={AntInput} name='name' type=\"text\" placeholder='Name' />\r\n                </div>\r\n\r\n                <div className=\"submit-container\">\r\n                <button className=\"ant-btn ant-btn-primary\" type=\"submit\">\r\n                    Submit\r\n                </button>\r\n                </div>\r\n                </Form>\r\n            )}\r\n        />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CollectionCreateForm;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'antd';\r\nimport { Button } from 'antd';\r\nimport ViewModal from './viewModal';\r\nimport CollectionCreateForm from './userModal';\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:4000' : ''\r\n\r\nconst UserCard = (props) => {\r\n    const {name, userDelete, id, getUsers} = props;\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [userToEdit, setUserToEdit] = useState('')\r\n    const [isEditVisible, setIsEditVisible] = useState(false)\r\n\r\n    const showEditModal = () => {\r\n        setUserToEdit(id)\r\n        setIsEditVisible(true)\r\n    }\r\n\r\n    const handleEditCancel = () => {\r\n        setIsEditVisible(false)\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsVisible(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsVisible(false)\r\n    }\r\n\r\n    const saveFormRef = formRef => {\r\n        formRef = formRef;\r\n      };\r\n\r\n      const editUser =(formValues, actions) => {\r\n        axios.put(baseUrl + `/api/users/${userToEdit}`, {name: formValues.name})\r\n            .then(res => {\r\n                actions.resetForm();\r\n                setIsEditVisible(false)\r\n                getUsers();\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n    }\r\n    \r\n    return (\r\n        <Card title={<h3>{name}</h3>} extra={<button onClick={() => showModal()}>view</button>} style={{ margin: '1.5em', backgroundColor: 'pink', width: 300 }}>\r\n            <div>\r\n            <Button style={{ margin: '0.3em'}} type=\"primary\" onClick={() => showEditModal()}>Edit</Button>\r\n            <CollectionCreateForm\r\n                wrappedComponentRef={saveFormRef}\r\n                visible={isEditVisible}\r\n                onCancel={handleEditCancel}\r\n                handleSubmit={editUser}\r\n                />\r\n            <Button style={{ margin: '0.3em'}} type=\"primary\" onClick={() => userDelete(id)}>delete</Button>\r\n            <ViewModal\r\n                visible={isVisible}\r\n                onCancel={handleCancel}\r\n                id={id}\r\n                />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import React, {useState} from 'react';\r\nimport UserCard from './userCard';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport { Button } from 'antd';\r\nimport CollectionCreateForm from './userModal';\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:4000' : ''\r\n\r\n\r\nconst Users = (props) => {\r\n    const {getUsers} = props;\r\n    const userArray = props.userArray;\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    // const [isEditVisible, setIsEditVisible] = useState(false)\r\n    // const [userToEdit, setUserToEdit] = useState('')\r\n\r\n    const showModal = () => {\r\n        setIsVisible(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsVisible(false)\r\n    }\r\n\r\n      const saveFormRef = formRef => {\r\n        formRef = formRef;\r\n      };\r\n\r\n    const addUser = (formValues, actions) => {\r\n        axios.post(baseUrl + '/api/users/', {name: formValues.name})\r\n            .then(res => {\r\n                actions.resetForm();\r\n                setIsVisible(false)\r\n                getUsers();\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    const deleteUser =(id) => {\r\n        axios.delete(baseUrl + `/api/users/${id}`)\r\n            .then(() => {\r\n                getUsers();\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', alignItems: 'center'}}>\r\n        <div>\r\n        <Button type=\"primary\" onClick={showModal}>Add User</Button>\r\n        </div>\r\n        \r\n        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-evenly'}}>\r\n        <div>\r\n        \r\n            <CollectionCreateForm\r\n                wrappedComponentRef={saveFormRef}\r\n                visible={isVisible}\r\n                onCancel={handleCancel}\r\n                handleSubmit={addUser}\r\n                />\r\n        </div>\r\n        {\r\n        userArray.map(user => \r\n        <div key={user.id}>\r\n            <UserCard name={user.name} id={user.id} getUsers={getUsers} userDelete={deleteUser}/>\r\n        </div>    \r\n        )\r\n        }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n    padding: 1em;\r\n    margin: 1.5em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-basis: 20%;\r\n    background-color: yellow;`\r\n\r\nconst PostCard = (props) => {\r\n    const {text, userId, userArray} = props;\r\n\r\n    const user = userArray.find(({id}) => id === userId)\r\n    \r\n    return (\r\n        <Card>\r\n            <h3>{text}</h3>\r\n            <h5>{user.name}</h5>\r\n            <div>\r\n            <button>edit</button>\r\n            <button>delete</button>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {AntInput} from \"./createAntFields\";\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Modal } from 'antd';\r\n\r\nconst CollectionCreateForm = (props) => {\r\n    const {visible, onCancel, onCreate, handleSubmit} = props;\r\n\r\n\r\n    return (\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Create a new post\"\r\n          okText=\"Create\"\r\n          onCancel={onCancel}\r\n          onOk={onCreate}\r\n        >\r\n          <Formik\r\n            initialValues={{user_id: '', text: ''}}\r\n            onSubmit={handleSubmit}\r\n            render={() => (\r\n                <Form className=\"form-container\">\r\n                <div>\r\n                    <Field component={AntInput} name='user_id' type=\"text\" placeholder='User ID' />\r\n                </div>\r\n                <div>\r\n                    <Field component={AntInput} name='text' type=\"text\" placeholder='Text' />\r\n                </div>\r\n                <div className=\"submit-container\">\r\n                <button className=\"ant-btn ant-btn-primary\" type=\"submit\">\r\n                    Submit\r\n                </button>\r\n                </div>\r\n                </Form>\r\n            )}\r\n        />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CollectionCreateForm;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport PostCard from './postCard';\r\nimport { Button } from 'antd';\r\nimport CollectionCreateForm from './postModal';\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:4000' : ''\r\n\r\n\r\nconst Post = (props) => {\r\n    console.log(process.env.NODE_ENV)\r\n    const userArray = props.userArray;\r\n    const [postArray, setPostArray] = useState([])\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    const showModal = () => {\r\n        setIsVisible(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsVisible(false)\r\n    }\r\n\r\n    const handleSubmit = (formValues, actions) => {\r\n        axios.post(baseUrl + `/api/users/${formValues.user_id}/posts/`, {user_id: formValues.user_id, text: formValues.text})\r\n            .then(res => {\r\n                actions.resetForm();\r\n                setIsVisible(false)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n      const saveFormRef = formRef => {\r\n        formRef = formRef;\r\n      };\r\n\r\n    useEffect(() => {\r\n        axios.get(baseUrl + '/api/posts')\r\n            .then(res => {\r\n                setPostArray(res.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button type=\"primary\" onClick={showModal}>Add Post</Button>\r\n            <CollectionCreateForm\r\n                wrappedComponentRef={saveFormRef}\r\n                visible={isVisible}\r\n                onCancel={handleCancel}\r\n                handleSubmit={handleSubmit}\r\n                />\r\n        {\r\n            postArray.map(post => \r\n        <div key={post.id}>\r\n            <PostCard text={post.text} userId={post.user_id} userArray={userArray}/>\r\n        </div>    \r\n        )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {useState, useEffect} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Users from './components/User';\r\nimport Post from './components/Post';\r\nimport { Layout, Menu } from 'antd';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:4000' : ''\r\n\r\nfunction App() {\r\n  const [userArray, setUserArray] = useState([])\r\n\r\n  const getUsers = () => {\r\n    axios.get(baseUrl + '/api/users')\r\n    .then(res => {\r\n        setUserArray(res.data)\r\n    })\r\n    .catch(error => {\r\n        console.log(error.message)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n    <Header>\r\n      <div className=\"logo\" />\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={['2']}\r\n        style={{ lineHeight: '64px' }}\r\n      >\r\n        <Menu.Item key=\"1\">\r\n        <Link to ={'/'}>Users</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n        <Link to ={'/posts'}>Posts</Link>\r\n        </Menu.Item>\r\n       \r\n      </Menu>\r\n    </Header>\r\n    <Content style={{ padding: '0 0px' }}>\r\n\r\n      <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\r\n      <Route exact path=\"/\" render={(props) => <Users {...props} userArray={userArray} getUsers={getUsers}/>}/>\r\n\r\n      <Route path=\"/posts\" render={(props) => <Post {...props} userArray={userArray} getUsers={getUsers}/>}/>\r\n        </div>\r\n    </Content>\r\n    <Footer style={{ textAlign: 'center' }}>Alexander's first monolith</Footer>\r\n  </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router>\r\n    <App />\r\n    </Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}